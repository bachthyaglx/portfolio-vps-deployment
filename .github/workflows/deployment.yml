name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Inject .env into frontend for build
      - name: Create .env for frontend build
        run: |
          echo "${{ secrets.EC2_FRONTEND_ENV_FILE }}" > frontend/.env

      # Inject .env for backend (optional but recommended)
      - name: Create .env for backend deploy
        run: |
          echo "${{ secrets.EC2_BACKEND_ENV_FILE }}" > backend/.env

      # Build frontend on GitHub Actions (NOT on EC2!)
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      # Rsync code (without .next) to EC2
      - name: Rsync code to EC2
        run: |
          cd ..
          rsync -avz --delete \
            --exclude '.git' \
            --exclude '.env' \
            --exclude 'node_modules' \
            --exclude 'frontend/node_modules' \
            --exclude 'frontend/.next' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/portfolio-vps-deployment

      # Rsync frontend .next separately to EC2
      - name: Rsync frontend build (.next) to EC2
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            frontend/.next ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/portfolio-vps-deployment/frontend/.next

      # Rsync frontend .env to EC2
      - name: Rsync frontend .env to EC2
        run: |
          rsync -avz frontend/.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/portfolio-vps-deployment/frontend/.env

      # Rsync backend .env to EC2
      - name: Rsync backend .env to EC2
        run: |
          rsync -avz backend/.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/portfolio-vps-deployment/backend/.env

      # Restart services on EC2 (backend + frontend)
      - name: Restart services on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -ex
            cd ~/portfolio-vps-deployment/backend
            pm2 restart backend --update-env || pm2 start npm --name backend -- start

            cd ~/portfolio-vps-deployment/frontend
            pm2 restart frontend --update-env || pm2 start npm --name frontend -- start
          EOF
